# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

volumes:
  orderer.com:
  orderer1.com:
  orderer2.com:
  orderer3.com:  
  orderer4.com:  
  peer0.issuer.com:
  peer1.issuer.com:
  peer0.holder.com:
  peer1.holder.com:


networks:
  blockchain:
    external: true
services:

  orderer.com:
    container_name: orderer.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../blockchain.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer.com/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer.com/tls/:/var/hyperledger/orderer/tls
        - orderer.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - blockchain

  orderer1.com:
    container_name: orderer1.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer1.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../blockchain.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer1.com/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer1.com/tls/:/var/hyperledger/orderer/tls
        - orderer1.com:/var/hyperledger/production/orderer
    ports:
      - 8050:7050
    networks:
      - blockchain

  orderer2.com:
    container_name: orderer2.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer2.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../blockchain.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer2.com/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer2.com/tls/:/var/hyperledger/orderer/tls
        - orderer2.com:/var/hyperledger/production/orderer
    ports:
      - 9050:7050
    networks:
      - blockchain
  
  orderer3.com:
    container_name: orderer3.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer3.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../blockchain.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer3.com/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer3.com/tls/:/var/hyperledger/orderer/tls
        - orderer3.com:/var/hyperledger/production/orderer
    ports:
      - 10050:7050
    networks:
      - blockchain
  orderer4.com:
    container_name: orderer4.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=ordererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer4.com:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
        - ../blockchain.block:/var/hyperledger/orderer/orderer.genesis.block
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer4.com/msp:/var/hyperledger/orderer/msp
        - ../organizations/ordererOrganizations/orderer.com/orderers/orderer4.com/tls/:/var/hyperledger/orderer/tls
        - orderer4.com:/var/hyperledger/production/orderer
    ports:
      - 11050:7050
    networks:
      - blockchain

  peer0.issuer.com:
    container_name: peer0.issuer.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=blockchain
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.issuer.com
      - CORE_PEER_ADDRESS=peer0.issuer.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.issuer.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.issuer.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.issuer.com:7051
      - CORE_PEER_LOCALMSPID=issuer
      - CORE_OPERATIONS_LISTENADDRESS=peer0.issuer.com:9443
      - CORE_METRICS_PROVIDER=prometheus
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/issuer.com/peers/peer0.issuer.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/issuer.com/peers/peer0.issuer.com/tls:/etc/hyperledger/fabric/tls
        - peer0.issuer.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
    networks:
      - blockchain

  peer1.issuer.com:
    container_name: peer1.issuer.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=blockchain
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer1.issuer.com
      - CORE_PEER_ADDRESS=peer1.issuer.com:8051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
      - CORE_PEER_CHAINCODEADDRESS=peer1.issuer.com:8052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.issuer.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.issuer.com:8051
      - CORE_PEER_LOCALMSPID=issuer
      - CORE_OPERATIONS_LISTENADDRESS=peer1.issuer.com:9443
      - CORE_METRICS_PROVIDER=prometheus
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/issuer.com/peers/peer1.issuer.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/issuer.com/peers/peer1.issuer.com/tls:/etc/hyperledger/fabric/tls
        - peer1.issuer.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 8051:8051
    networks:
      - blockchain

  peer0.holder.com:
    container_name: peer0.holder.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=blockchain
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.holder.com
      - CORE_PEER_ADDRESS=peer0.holder.com:7052
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_CHAINCODEADDRESS=peer0.holder.com:7053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.holder.com:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.holder.com:7052
      - CORE_PEER_LOCALMSPID=holder
      - CORE_OPERATIONS_LISTENADDRESS=peer0.holder.com:9443
      - CORE_METRICS_PROVIDER=prometheus
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/holder.com/peers/peer0.holder.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/holder.com/peers/peer0.holder.com/tls:/etc/hyperledger/fabric/tls
        - peer0.holder.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7052:7052
    networks:
      - blockchain

  peer1.holder.com:
    container_name: peer1.holder.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=blockchain
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer1.holder.com
      - CORE_PEER_ADDRESS=peer1.holder.com:8052
      - CORE_PEER_LISTENADDRESS=0.0.0.0:8052
      - CORE_PEER_CHAINCODEADDRESS=peer1.holder.com:8053
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8053
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.holder.com:8052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.holder.com:8052
      - CORE_PEER_LOCALMSPID=holder
      - CORE_OPERATIONS_LISTENADDRESS=peer1.holder.com:9443
      - CORE_METRICS_PROVIDER=prometheus
    volumes:
        - /var/run/:/host/var/run/
        - ../organizations/peerOrganizations/holder.com/peers/peer1.holder.com/msp:/etc/hyperledger/fabric/msp
        - ../organizations/peerOrganizations/holder.com/peers/peer1.holder.com/tls:/etc/hyperledger/fabric/tls
        - peer1.holder.com:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 8052:8052
    networks:
      - blockchain
    